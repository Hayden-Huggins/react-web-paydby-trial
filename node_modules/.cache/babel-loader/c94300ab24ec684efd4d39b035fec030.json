{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hayde\\\\Documents\\\\Projects\\\\REACT\\\\paydby-web-trial\\\\src\\\\components\\\\FetchRandomUser.js\";\nimport React from 'react';\nexport default class FetchRandomUser extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const url = \"https://www.mocky.io/v2/5b9751e5300000332a0bd52d\";\n    const response = fetch(url);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"person...\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hayde/Documents/Projects/REACT/paydby-web-trial/src/components/FetchRandomUser.js"],"names":["React","FetchRandomUser","Component","state","loading","componentDidMount","url","response","fetch","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA6C;AAAA;AAAA;AAAA,SAExDC,KAFwD,GAElD;AACFC,MAAAA,OAAO,EAAE;AADP,KAFkD;AAAA;;AAOxDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,GAAG,GAAG,kDAAZ;AACA,UAAMC,QAAQ,GAAGC,KAAK,CAACF,GAAD,CAAtB;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEF,KAAKN,KAAL,CAAWC,OAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArB,GAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAF3C,CAAP;AAIH;;AAjBuD","sourcesContent":["import React from 'react'\r\n\r\nexport default class FetchRandomUser extends React.Component{\r\n\r\n    state={\r\n        loading: true\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const url = \"https://www.mocky.io/v2/5b9751e5300000332a0bd52d\"\r\n        const response = fetch(url);\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            {/* If loading then show a loading state, if found a person show persons data */}\r\n            {this.state.loading ? <div>loading...</div> : <div>person...</div>}\r\n        </div>\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}